#! /usr/bin/env python3

import argparse
import os

###############################################################
### Script to mock the dragen executable for testing purposes
###############################################################

parser = argparse.ArgumentParser(description='Mock Dragen executable for testing purposes.')

parser.add_argument('-r', help='reference FASTA file')
parser.add_argument('--output-directory', type=str, help='Output directory')
parser.add_argument('--output-file-prefix', help='Output file prefix')
parser.add_argument('-1', help='FASTQ file 1')
parser.add_argument('-2', help='FASTQ file 2')
parser.add_argument('--enable-variant-caller', help='Run variant calling')
parser.add_argument('--vc-sample-name', help='Sample name')

args = vars(parser.parse_args())

print("\n","Input parameters:")
for arg in args:
  print(arg, ":", args[arg])
print("\n")

output_directory = args["output_directory"]
output_file_prefix = args["output_file_prefix"]
output_file = output_directory + "/" + output_file_prefix + ".vcf"

print(f'Generating output file: "{output_file}"')
if not os.path.exists(output_directory):
    os.makedirs(output_directory)
try:
    file = open(output_file, 'r')
except IOError:
    file = open(output_file, 'w')


